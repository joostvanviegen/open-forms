name: Code quality checks

# Run this workflow every time a new commit pushed to your repository
on:
  push:
    branches:
      - master
      - stable/*
    tags:
    paths:
      - '**.py'
      - '**.json'
      - '**.yaml'
      - '**.in'
  pull_request:
    paths:
      - '**.py'
      - '**.json'
      - '**.yaml'
      - '**.in'
  workflow_dispatch:

jobs:
  isort:
    name: Check import sorting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install OS dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libxml2-dev libxmlsec1-dev libxmlsec1-openssl
      - uses: isort/isort-action@v0.1.0
        with:
          requirementsFiles: requirements/ci.txt
          sortPaths: "src docs"
          configuration: '--check-only --diff'

  black:
    name: Check code formatting with black
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install OS dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libxml2-dev libxmlsec1-dev libxmlsec1-openssl
      - name: Install dependencies
        run: |
          pip install -r requirements/ci.txt
      - name: Run black
        run: |
          black --check src/openforms docs

  prettier:
    name: Check frontend code formatting with prettier
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '16'

      - name: Install prettier
        run: |
          npm ci

      - name: Run prettier
        run: |
          npm run checkformat

  migrations:
    name: Check for model changes not present in the migrations or default_admin_index fixture
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        # Needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install OS dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libxml2-dev libxmlsec1-dev libxmlsec1-openssl
      - name: Install dependencies
        run: |
          pip install -r requirements/ci.txt
      - name: Run manage.py makemigrations --check --dry-run
        run: |
          src/manage.py makemigrations --check --dry-run
        env:
          DJANGO_SETTINGS_MODULE: openforms.conf.ci
          SECRET_KEY: dummy
          DB_USER: postgres
          DB_NAME: postgres
          DB_PASSWORD: ''
      - name: Load default_admin_index fixture and run manage.py check_admin_index
        run: |
          src/manage.py migrate
          src/manage.py loaddata default_admin_index
          src/manage.py check_admin_index
        env:
          DJANGO_SETTINGS_MODULE: openforms.conf.ci
          SECRET_KEY: dummy
          DB_USER: postgres
          DB_NAME: postgres
          DB_PASSWORD: ''

  dependencies:
    name: Lint dependencies
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Run linter
        run: python ./bin/lint_dependencies.py
