openapi: 3.0.1
info:
  title: API for IRMA
  description: This is the API for IRMA.
  version: 1.0.0
servers:
  - url: http://localhost:8088
tags: 
- name: session
paths:
  /session:
    post:
      tags:
      - Session
      summary: Create a new session
      operationId: createSession
      parameters:
      - name: Authorization
        in: header
        description: JWT token
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
           schema:
            type: object
            properties:
                context:
                  type: string
                disclose:
                  type: array
                  items:
                    type: string
      responses:
           default:
            description: Session created
            content:
              application/json:
                  schema:
                    type: object
                    properties:
                      token:
                        type: string
                      sessionptr:
                        type: object
                      frontendRequest:
                        type: object
                      authorization:
                        type: string
                      minProtocolVersion:
                          type: string
                      maxProtocolVersion:
                          type: string
  /session/{requestorToken}:
    delete:
      tags:
      - Session
      summary: Delete a session
      operationId: deleteSession
      parameters:
        - name: requestorToken
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Deletion confirmation
          content:
            application/text:
              schema:
                type: string
  /session/{requestorToken}/status:
    get:
      tags:
      - Session
      summary: Get the status of a session
      operationId: getSessionStatus
      parameters:
        - name: requestorToken
          in: path
          required: true
          schema:
            type: string
      responses:
           default:
              description: Session status
              content:
                application/json:
                  schema:
                    type: string
                    enum:
                        - INITIALIZED
                        - PAIRING
                        - CONNECTED
                        - CANCELLED
                        - DONE
                        - TIMEOUT
  /sesssion/{requestorToken}/statusevents:
    get:
      tags:
      - Session
      summary: Get the status events of a session
      operationId: getSessionStatusEvents
      parameters:
        - name: requestorToken
          in: path
          required: true
          schema:
            type: string
      responses:
           default:
              description: Subscribe to status events
              content:
                application/json:
                  schema:
                    type: object
  /session/{requestorToken}/result:
    get:
      tags:
      - Session
      summary: Get the result of a session
      operationId: getSessionResult
      parameters:
        - name: requestorToken
          in: path
          required: true
          schema:
            type: string
      responses:
           default:
              description: Session result
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - disclosing
                          - signing
                          - issuing
                      status:
                        type: string
                        enum:
                        - INITIALIZED
                        - PAIRING
                        - CONNECTED
                        - CANCELLED
                        - DONE
                        - TIMEOUT
  /session/{requestorToken}/result-jwt:
    get:
      tags:
      - Session
      - JWT
      summary: Get the result of a session as a JWT
      operationId: getSessionResultJWT
      parameters:
        - name: requestorToken
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: The result as a JWT
          content:
            application/json:
              schema:
                type: string
  /session/{requestorToken}/getproof:
      get:
        tags:
        - Session
        - JWT
        summary: Get the result of a session as a JWT but in a different format
        operationId: getSessionResultJWTProof
        parameters:
          - name: requestorToken
            in: path
            required: true
            schema:
              type: string
        responses:
          default:
            description: The result as a JWT but different
            content:
              application/json:
               schema:
                    type: string
  /publickey:
      get:
        tags:
        - JWT
        summary: Get the public PEM key with which JWT's kan be verified.
        operationId: getPublicKey
        responses:
          default:
            description: The public PEM key to verify signed JWT tokens
            content:
              application/text:
                example:
                  "blabla"