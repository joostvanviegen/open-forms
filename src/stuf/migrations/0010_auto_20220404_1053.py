# Generated by Django 3.2.12 on 2022-04-04 08:53

from django.db import migrations
from zgw_consumers.constants import CertificateTypes


def forward(apps, schema_editor):
    SoapService = apps.get_model("stuf", "SoapService")
    StufService = apps.get_model("stuf", "StufService")
    Certificate = apps.get_model("zgw_consumers", "Certificate")

    updated_soap_services = []
    for stuf_service in StufService.objects.all():
        soap_service = stuf_service.soap_service
        soap_service.endpoint_security = stuf_service.endpoint_security
        soap_service.user = stuf_service.user
        soap_service.password = stuf_service.password
        soap_service.soap_version = stuf_service.soap_version
        if stuf_service.certificate:
            certificate = Certificate(
                public_certificate=stuf_service.certificate,
                private_key=stuf_service.certificate_key,
            )
            certificate.save()
            soap_service.client_certificate = certificate

        updated_soap_services.append(soap_service)

    SoapService.objects.bulk_update(
        updated_soap_services,
        [
            "endpoint_security",
            "user",
            "password",
            "client_certificate",
            "soap_version",
        ],
    )


def backwards(apps, schema_editor):
    StufService = apps.get_model("stuf", "StufService")

    updated_stuf_services = []
    for stuf_service in StufService.objects.all():
        soap_service = stuf_service.soap_service
        stuf_service.endpoint_security = soap_service.endpoint_security
        stuf_service.user = soap_service.user
        stuf_service.password = soap_service.password
        stuf_service.soap_version = soap_service.soap_version
        if soap_service.client_certificate:
            stuf_service.certificate = (
                soap_service.client_certificate.public_certificate
            )
            if soap_service.client_certificate.type == CertificateTypes.key_pair:
                stuf_service.certificate_key = (
                    soap_service.client_certificate.private_key
                )

        updated_stuf_services.append(stuf_service)

    StufService.objects.bulk_update(
        updated_stuf_services,
        [
            "endpoint_security",
            "user",
            "password",
            "certificate",
            "certificate_key",
            "soap_version",
        ],
    )


class Migration(migrations.Migration):

    dependencies = [
        ("stuf", "0009_auto_20220404_1050"),
    ]

    operations = [
        migrations.RunPython(forward, backwards),
    ]
